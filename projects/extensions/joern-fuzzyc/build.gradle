plugins {
	id 'antlr'
}


task copyToLib3(type: Copy) {
    into "lib"
    from configurations.runtime
}

dependencies{
	antlr "org.antlr:antlr4:4.5.3"
	
	compile project(':projects:extensions:jpanlib')

	compile group: 'com.tunnelvisionlabs', name: 'antlr4-annotations', version: '4.5.3'
	compile group: 'com.tunnelvisionlabs', name: 'antlr4-runtime', version: '4.5.3'
	compile group: 'commons-cli', name: 'commons-cli', version: '1.2'
	compile group: 'org.neo4j', name: 'neo4j', version: '2.1.8'
	compile group: 'junit', name: 'junit', version: '4.12'
	
}

//Generate Java files from grammar
generateGrammarSource{
	
	if (System.getProperty("os.name").toLowerCase().contains("windows")) {
		includes = ['**/Function.g4', '**/Module.g4']
	} else {
		includes = ['src/main/java/antlr/Function.g4', 'src/main/java/antlr/Module.g4']
	}
	
	source = "src/main/java/antlr"
	
	//Make grammaer know the imports
	arguments << "-lib" << "src/main/java/antlr"			
}

task copyGenratedFiles(type: Copy) {
	into "src/main/java/antlr"
	from "build/generated-src/antlr/java/antlr"
}

task removeUnusedFiles() {
	delete "build/generated-src/antlr/java/antlr"
}

copyGenratedFiles.dependsOn generateGrammarSource
build.dependsOn copyGenratedFiles
build.dependsOn copyToLib3

